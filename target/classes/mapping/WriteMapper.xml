<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->
<mapper namespace="mapping.WriteMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
 resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
User类就是users表所对应的实体类
-->
    <!--
    根据id查询得到一个user对象
 -->
    <insert id="insertlogo" parameterType="java.util.HashMap">
        insert into ${tablename}(comp_full_name,logo_url,only_id,source) values(#{comp_full_name},#{logo_url},#{only_id},#{source})
    </insert>

    <insert id="insertbase" parameterType="java.util.HashMap">
        insert into ${tablename}(comp_full_name,CreditCode,EconKind,LegalPerson,RegistCapi,CreateTime,BelongOrg,BusinessLife,RegistStatus,CheckDate,BusinessScope,OrgType,only_id,source)

            values(#{comp_full_name},#{CreditCode},#{EconKind},#{LegalPerson},#{RegistCapi},#{CreateTime},#{BelongOrg},#{BusinessLife},#{RegistStatus},#{CheckDate},#{BusinessScope},#{OrgType},#{only_id},#{source})
    </insert>

    <insert id="insertweb" parameterType="java.util.HashMap">
        insert into ${tablename}(comp_full_name,web_url,only_id,source) values(#{comp_full_name},#{web_url},#{only_id},#{source})
    </insert>

    <insert id="insertintro" parameterType="java.util.HashMap">
        insert into ${tablename}(comp_full_name,intro,only_id,source) values(#{comp_full_name},#{intro},#{only_id},#{source})
    </insert>

    <insert id="insertregistaddr" parameterType="java.util.HashMap">
        insert into ${tablename}(comp_full_name,regaddr,only_id,source) values(#{comp_full_name},#{regaddr},#{only_id},#{source})
    </insert>

    <insert id="insertofficeaddr" parameterType="java.util.HashMap">
        insert into ${tablename}(comp_full_name,offaddr,only_id,source) values(#{comp_full_name},#{offaddr},#{only_id},#{source})
    </insert>

    <insert id="insertshortname" parameterType="java.util.HashMap">
        insert into ${tablename}(comp_full_name,english_short,chinese_short,only_id,source) values(#{comp_full_name},#{english_short},#{chinese_short},#{only_id},#{source})
    </insert>

    <insert id="insertcontactinfo" parameterType="java.util.HashMap">
        insert into ${tablename}(comp_full_name,phone,email,fax,linkman,only_id,source) values(#{comp_full_name},#{phone},#{email},#{fax},#{linkman},#{only_id},#{source})
    </insert>

    <insert id="insertteaminfo" parameterType="java.util.HashMap">
        insert into ${tablename}(comp_full_name,staffName,staffPosition,staffIntro,onPositionStatus,headPic,staffPhone,staffEmail) values(#{comp_full_name},#{staffName},#{staffPosition},#{staffIntro},#{onPositionStatus},#{headPic},#{staffPhone},#{staffEmail},#{only_id},#{source})
    </insert>

    <delete id="delete" parameterType="java.util.HashMap">
        delete from ${tablename} where only_id=#{only_id} and source=#{source}
    </delete>
</mapper>