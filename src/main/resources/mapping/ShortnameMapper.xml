<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->
<mapper namespace="mapping.ShortnameMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
 resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
User类就是users表所对应的实体类
-->
    <!--
    根据id查询得到一个user对象
 -->
    <select id="getRead" parameterType="java.util.HashMap"
            resultType="java.util.HashMap">
        select DISTINCT ${quan},${jian} from ${tablename} where ${quan}!='' and ${quan} is not null and ${jian}!='' and ${jian} is not null and ${quan} in
        (select comp_full_name from ${tablename2} where comp_short_name='' or comp_short_name is null)
    </select>


    <update id="update" parameterType="java.util.HashMap">
        update ${tablename} set ${jian}=#{jva} where ${id}=${comp_id}
    </update>

    <select id="getFin" parameterType="java.util.HashMap"
            resultType="java.util.HashMap">
        select DISTINCT ${fintime} from ${tablename} where ${jian} like #{jvas}
    </select>

</mapper>